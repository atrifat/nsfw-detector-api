name: CI CUDA

on:
  push:
    branches: ["main", "dev"]
    tags: ["v*"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Wait for Check workflow to complete successfully
        uses: lewagon/wait-on-check-action@v1.4.0
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          check-name: "check"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30
          allowed-conclusions: success
      - name: Checkout
        uses: actions/checkout@v4
        if: ${{ !env.ACT }}
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@v1.3.1
        if: ${{ !env.ACT }}
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: false
          dotnet: false
          haskell: false
          large-packages: true
          docker-images: true
          swap-storage: true
      - name: Set up QEMU
        if: ${{ !env.ACT }}
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        if: ${{ !env.ACT }}
        uses: docker/setup-buildx-action@v3
      - name: Login to Registry
        if: github.event_name != 'pull_request' && ${{ !env.ACT }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        if: ${{ !env.ACT }}
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Add CUDA suffix to tags
        id: modify_tags
        if: ${{ !env.ACT }}
        run: |
          # Get the tags from the output
          tags="${{ steps.meta.outputs.tags }}"

          suffix="-cuda"

          # Add suffix to tags
          modified_tags=$(echo "$tags" | tr ',' '\n' | sed "s/$/$suffix/" | tr '\n' ',' | sed 's/,$//')

          # Set the modified tags and labels as outputs
          echo "modified_tags=$modified_tags" >> $GITHUB_ENV
      - name: Build and push CUDA image
        uses: docker/build-push-action@v5
        if: ${{ !env.ACT }}
        with:
          context: .
          file: Dockerfile.cuda
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.modified_tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
